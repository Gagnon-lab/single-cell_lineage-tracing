devtools::install_github("BlakeRMills/MoMAColors")
install.packages("devtools")
install.packages("devtools")
# install.packages("devtools")
devtools::install_github("BlakeRMills/MoMAColors")
moma.colors("vonHeyl")
meta <- unedited@meta.data
edited <- readRDS("data/objects/edited_w_diffscores_lineage.rds")
unedited <- readRDS("data/objects/unedited_w_diffscores_lineage.rds")
meta <- unedited@meta.data
meta$cell.id <- row.names(meta)
meta <- as.data.frame(cbind(meta$cell.id, meta$diff.score, meta$barcode, meta$site1, meta$site2, meta$site3, meta$site4, meta$site5, meta$site6, meta$site7, meta$site8, meta$site9, meta$site10))
write.table(meta, "data/tables/unedited_diffscores.tsv", sep = "\t", col.names = F, row.names = F, quote = F)
reticulate::repl_python()
unedited_diffranges <- read.table('data/tables/unedited_diffranges.tsv', sep = '\t', header = T)
unedited <- AddMetaData(unedited, as.list(subset(unedited_diffranges, select = c('diff.range'))), col.name = 'diff.range')
unique_unedited_barcodes <- as.data.frame(unique(unedited@meta.data$barcode))
write.table(unique_unedited_barcodes, "data/tables/unique_unedited_barcodes.tsv", sep = "\t", col.names = F, row.names = F, quote = F)
reticulate::repl_python()
source("functions_by_andy.R")
source("bin/functions_by_andy.R")
clonality <- read.table("data/tables/unedited_diffranges_cellcounts.tsv", sep = "\t", header = T)
clonality$X0.0.1 <- as.vector(sapply(clonality$X0.0.1,normalize,length(subset(edited@meta.data, barcode.count != 0 & diff.range == '0-0.1')$barcode)))
clonality <- read.table("data/tables/unedited_diffranges_cellcounts.tsv", sep = "\t", header = T)
clonality$X0.0.1 <- as.vector(sapply(clonality$X0.0.1,normalize,length(subset(unedited@meta.data, barcode.count != 0 & diff.range == '0-0.1')$barcode)))
clonality$X0.1.0.2 <- as.vector(sapply(clonality$X0.1.0.2,normalize,length(subset(unedited@meta.data, barcode.count != 0 & diff.range == '0.1-0.2')$barcode)))
clonality$X0.2.0.3 <- as.vector(sapply(clonality$X0.2.0.3,normalize,length(subset(unedited@meta.data, barcode.count != 0 & diff.range == '0.2-0.3')$barcode)))
clonality$X0.3.0.4 <- as.vector(sapply(clonality$X0.3.0.4,normalize,length(subset(unedited@meta.data, barcode.count != 0 & diff.range == '0.3-0.4')$barcode)))
clonality$X0.4.0.5 <- as.vector(sapply(clonality$X0.4.0.5,normalize,length(subset(unedited@meta.data, barcode.count != 0 & diff.range == '0.4-0.5')$barcode)))
clonality$X0.5.0.6 <- as.vector(sapply(clonality$X0.5.0.6,normalize,length(subset(unedited@meta.data, barcode.count != 0 & diff.range == '0.5-0.6')$barcode)))
clonality$X0.6.0.7 <- as.vector(sapply(clonality$X0.6.0.7,normalize,length(subset(unedited@meta.data, barcode.count != 0 & diff.range == '0.6-0.7')$barcode)))
clonality$X0.7.0.8 <- as.vector(sapply(clonality$X0.7.0.8,normalize,length(subset(unedited@meta.data, barcode.count != 0 & diff.range == '0.7-0.8')$barcode)))
clonality$X0.8.0.9 <- as.vector(sapply(clonality$X0.8.0.9,normalize,length(subset(unedited@meta.data, barcode.count != 0 & diff.range == '0.8-0.9')$barcode)))
clonality$X0.9.1<- as.vector(sapply(clonality$X0.9.1,normalize,length(subset(unedited@meta.data, barcode.count != 0 & diff.range == '0.9-1.0')$barcode)))
names(clonality)[names(clonality) == "X0.0.1"] <- "0 - 0.1"
names(clonality)[names(clonality) == "X0.1.0.2"] <- "0.1 - 0.2"
names(clonality)[names(clonality) == "X0.2.0.3"] <- "0.2 - 0.3"
names(clonality)[names(clonality) == "X0.3.0.4"] <- "0.3 - 0.4"
names(clonality)[names(clonality) == "X0.4.0.5"] <- "0.4- 0.5"
names(clonality)[names(clonality) == "X0.5.0.6"] <- "0.5 - 0.6"
names(clonality)[names(clonality) == "X0.6.0.7"] <- "0.6 - 0.7"
names(clonality)[names(clonality) == "X0.7.0.8"] <- "0.7 - 0.8"
names(clonality)[names(clonality) == "X0.8.0.9"] <- "0.8 - 0.9"
names(clonality)[names(clonality) == "X0.9.1"] <- "0.9 - 1"
clonality_df <- melt(clonality, id.vars="barcode", value.name="value", variable.name= c("state"))
library(reshape2)
clonality_df <- melt(clonality, id.vars="barcode", value.name="value", variable.name= c("state"))
ggplot(data=clonality_df, aes(x=state, y=value, group = barcode, colour = barcode)) +
#geom_point() +
geom_line(size = 1) +
theme_bw() +
theme(text = element_text(family = "Arial")) +
theme(axis.text.y = element_text(size = 10)) +
theme(axis.text.x = element_text(size = 10, angle = 25, hjust = 1)) +
theme(axis.title = element_text(size = 12)) +
theme(plot.title = element_text(size = 20)) +
ggtitle("lineage barcode abundance across differentiation") +
theme(plot.title = element_text(hjust = 0.5, size = 12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
xlab("differentiation ranges") +
ylab("normalized percent") + ylim(0,50) +
scale_color_manual(values=rainbow(14)) + theme(legend.position = "none")
library(ggplot2)
clonality_df <- melt(clonality, id.vars="barcode", value.name="value", variable.name= c("state"))
ggplot(data=clonality_df, aes(x=state, y=value, group = barcode, colour = barcode)) +
#geom_point() +
geom_line(size = 1) +
theme_bw() +
theme(text = element_text(family = "Arial")) +
theme(axis.text.y = element_text(size = 10)) +
theme(axis.text.x = element_text(size = 10, angle = 25, hjust = 1)) +
theme(axis.title = element_text(size = 12)) +
theme(plot.title = element_text(size = 20)) +
ggtitle("lineage barcode abundance across differentiation") +
theme(plot.title = element_text(hjust = 0.5, size = 12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
xlab("differentiation ranges") +
ylab("normalized percent") + ylim(0,50) +
scale_color_manual(values=rainbow(14)) + theme(legend.position = "none")
clonality_df <- melt(clonality, id.vars="barcode", value.name="value", variable.name= c("state"))
ggplot(data=clonality_df, aes(x=state, y=value, group = barcode, colour = barcode)) +
#geom_point() +
geom_line(size = 1) +
theme_bw() +
theme(text = element_text(family = "Arial")) +
theme(axis.text.y = element_text(size = 10)) +
theme(axis.text.x = element_text(size = 10, angle = 25, hjust = 1)) +
theme(axis.title = element_text(size = 12)) +
theme(plot.title = element_text(size = 20)) +
ggtitle("lineage barcode abundance across differentiation") +
theme(plot.title = element_text(hjust = 0.5, size = 12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
xlab("differentiation ranges") +
ylab("normalized percent") + ylim(0,50) +
scale_color_manual(values=rainbow(1)) + theme(legend.position = "none")
clonality_df <- melt(clonality, id.vars="barcode", value.name="value", variable.name= c("state"))
ggplot(data=clonality_df, aes(x=state, y=value, group = barcode, colour = barcode)) +
#geom_point() +
geom_line(size = 1) +
theme_bw() +
theme(text = element_text(family = "Arial")) +
theme(axis.text.y = element_text(size = 10)) +
theme(axis.text.x = element_text(size = 10, angle = 25, hjust = 1)) +
theme(axis.title = element_text(size = 12)) +
theme(plot.title = element_text(size = 20)) +
ggtitle("lineage barcode abundance across differentiation") +
theme(plot.title = element_text(hjust = 0.5, size = 12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
xlab("differentiation ranges") +
ylab("normalized percent") + ylim(0,100) +
scale_color_manual(values=rainbow(1)) + theme(legend.position = "none")
# load required packages
library(dplyr)
library(Seurat)
library(ggplot2)
library(stringr)
library(cowplot)
library(reshape2)
source("bin/plot_barcode_on_UMAP.R")
source("bin/functions_by_andy.R")
